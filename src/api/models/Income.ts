/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { IncomeCategory } from './IncomeCategory';
import {
    IncomeCategoryFromJSON,
    IncomeCategoryFromJSONTyped,
    IncomeCategoryToJSON,
    IncomeCategoryToJSONTyped,
} from './IncomeCategory';

/**
 * 
 * @export
 * @interface Income
 */
export interface Income {
    /**
     * 
     * @type {number}
     * @memberof Income
     */
    id?: number;
    /**
     * 
     * @type {IncomeCategory}
     * @memberof Income
     */
    category?: IncomeCategory;
    /**
     * 
     * @type {number}
     * @memberof Income
     */
    amount?: number;
    /**
     * 
     * @type {string}
     * @memberof Income
     */
    notes?: string;
    /**
     * 
     * @type {Date}
     * @memberof Income
     */
    dateAdded?: Date;
}

/**
 * Check if a given object implements the Income interface.
 */
export function instanceOfIncome(value: object): value is Income {
    return true;
}

export function IncomeFromJSON(json: any): Income {
    return IncomeFromJSONTyped(json, false);
}

export function IncomeFromJSONTyped(json: any, ignoreDiscriminator: boolean): Income {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'category': json['category'] == null ? undefined : IncomeCategoryFromJSON(json['category']),
        'amount': json['amount'] == null ? undefined : json['amount'],
        'notes': json['notes'] == null ? undefined : json['notes'],
        'dateAdded': json['dateAdded'] == null ? undefined : (new Date(json['dateAdded'])),
    };
}

export function IncomeToJSON(json: any): Income {
    return IncomeToJSONTyped(json, false);
}

export function IncomeToJSONTyped(value?: Income | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'category': IncomeCategoryToJSON(value['category']),
        'amount': value['amount'],
        'notes': value['notes'],
        'dateAdded': value['dateAdded'] == null ? undefined : ((value['dateAdded']).toISOString()),
    };
}

