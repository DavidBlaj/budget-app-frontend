/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ExpenseCategory } from './ExpenseCategory';
import {
    ExpenseCategoryFromJSON,
    ExpenseCategoryFromJSONTyped,
    ExpenseCategoryToJSON,
    ExpenseCategoryToJSONTyped,
} from './ExpenseCategory';

/**
 * 
 * @export
 * @interface ExpenseDto
 */
export interface ExpenseDto {
    /**
     * 
     * @type {number}
     * @memberof ExpenseDto
     */
    id?: number;
    /**
     * 
     * @type {ExpenseCategory}
     * @memberof ExpenseDto
     */
    category?: ExpenseCategory;
    /**
     * 
     * @type {number}
     * @memberof ExpenseDto
     */
    amount?: number;
    /**
     * 
     * @type {string}
     * @memberof ExpenseDto
     */
    subCategory?: string;
    /**
     * 
     * @type {string}
     * @memberof ExpenseDto
     */
    notes?: string;
    /**
     * 
     * @type {Date}
     * @memberof ExpenseDto
     */
    dateAdded?: Date;
}

/**
 * Check if a given object implements the ExpenseDto interface.
 */
export function instanceOfExpenseDto(value: object): value is ExpenseDto {
    return true;
}

export function ExpenseDtoFromJSON(json: any): ExpenseDto {
    return ExpenseDtoFromJSONTyped(json, false);
}

export function ExpenseDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): ExpenseDto {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'category': json['category'] == null ? undefined : ExpenseCategoryFromJSON(json['category']),
        'amount': json['amount'] == null ? undefined : json['amount'],
        'subCategory': json['subCategory'] == null ? undefined : json['subCategory'],
        'notes': json['notes'] == null ? undefined : json['notes'],
        'dateAdded': json['dateAdded'] == null ? undefined : (new Date(json['dateAdded'])),
    };
}

export function ExpenseDtoToJSON(json: any): ExpenseDto {
    return ExpenseDtoToJSONTyped(json, false);
}

export function ExpenseDtoToJSONTyped(value?: ExpenseDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'category': ExpenseCategoryToJSON(value['category']),
        'amount': value['amount'],
        'subCategory': value['subCategory'],
        'notes': value['notes'],
        'dateAdded': value['dateAdded'] == null ? undefined : ((value['dateAdded']).toISOString()),
    };
}

